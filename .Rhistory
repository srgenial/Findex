for(i in 1 : 4){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = 2)
summary(johaf)
RC <- cbind(f, 1)%*%johaf@V
plot(RC[,1], type="l")
adf(RC[,1])
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=1, type = "const")$selection["AIC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=2, type = "const")$selection["AIC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = 2, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["HQ(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = 2, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["SC(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = 2, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p <- 2#pero escogeremos 2
# estimamos el VAR
varf <- VAR(f, p = 2, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p <- 2#pero escogeremos 2
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p
p <- 2#pero escogeremos 2
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
regref<-lm(f[,"GDPMX"]~f[,"findex"]+f[,"GCF"]+ f[,"GDPUS"])
coeftest(regref)
ts.plot(regref$residuals)
adf(resid(regref))
normality.test(varf)
arch.test(varf)
serial.test(varf)
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
RC <- cbind(f, 1)%*%johaf@V
plot(RC[,1], type="l")
adf(RC[,1])
johaf <- ca.jo(f, type="eigen", ecdet = "none", K = p)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = 3)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = 4)
summary(johaf)
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 2
p <- 2
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = 7)
summary(johaf)
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 2
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
regref<-lm(f[,"GDPMX"]~f[,"findex"]+f[,"GCF"]+ f[,"GDPUS"])
coeftest(regref)
ts.plot(regref$residuals)
adf(resid(regref))
normality.test(varf)
arch.test(varf)
serial.test(varf)
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = 7)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
p <- VARselect(f,lag.max=12, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=12, type = "const")$selection["HQ(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=12, type = "const")$selection["SC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=6, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
#clean
rm(list = ls())
sessionInfo()
# Set the working directory
#setwd()
getwd()
#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR", "rticles")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
# path
#path <-"C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Findex/Findex/"
# some functions
source("functions.r")
#import DataFrame
LLG<-WDI(indicator = c("GFDD.DI.05"), country=c('MX'), start=1961, end=2016)
PCDM<-WDI(indicator = c('GFDD.DI.12'), country=c('MX'), start=1961, end=2016)
DCFS<-WDI(indicator = c("FS.AST.DOMS.GD.ZS"), country=c('MX'), start=1961, end=2016)
DCPS<-WDI(indicator = c("FS.AST.PRVT.GD.ZS"), country=c('MX'), start=1961, end=2016)
M2<-WDI(indicator = c("FM.LBL.BMNY.GD.ZS"), country=c('MX'), start=1961, end=2016)
GDPMX<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('MX'), start=1961, end=2016)
GDPUS<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('US'), start=1961, end=2016)
GCF<-WDI(indicator = c("NE.GDI.TOTL.ZS"), country=c('MX'), start=1961, end=2016)
#reArrange
names(LLG)<-c("code", "C","LLG","yr")
LLG<-LLG[order(LLG$yr),]
names(PCDM)<-c("code", "C","PCDM","yr")
PCDM<-PCDM[order(PCDM$yr),]
names(DCFS)<-c("code", "C","DCFS","yr")
DCFS<-DCFS[order(DCFS$yr),]
names(DCPS)<-c("code", "C","DCPS","yr")
DCPS<-DCPS[order(DCPS$yr),]
names(M2)<-c("code", "C","M2","yr")
M2<-M2[order(M2$yr),]
names(GDPMX)<-c("code", "C","GDPMX","yr")
GDPMX<-GDPMX[order(GDPMX$yr),]
names(GDPUS)<-c("code", "C","GDPUS","yr")
GDPUS<-GDPUS[order(GDPUS$yr),]
names(GCF)<-c("code", "C","GCF","yr")
GCF<-GCF[order(GCF$yr),]
LLG$LLG<-log(LLG$LLG)
PCDM$PCDM<-log(PCDM$PCDM)
DCFS$DCFS<-log(DCFS$DCFS)
GDPMX$GDPMX<-log(GDPMX$GDPMX)
GCF$GCF<-log(GCF$GCF)
GDPUS$GDPUS<-log(GDPUS$GDPUS)
DCPS$DCPS<-log(DCPS$DCPS)
M2$M2<-log(M2$M2)
ts<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GCF$GCF, GDPUS$GDPUS)
ts<-ts((ts), names=c("LLG","PCDM", "DCFS", "DCPS","M2", "GDPMX","GCF", "GDPUS"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
head(ts)
ts.plot(scale(ts),col=c(1,2,3,4,5,6,7,8), lwd=c(1,1,1,1,1,1,1))
legend("bottomleft", colnames(ts), col = c(1:8), lty = 1)
cor(ts)
adf_mat <- matrix(0, ncol(ts), 2)
rownames(adf_mat) <- colnames(ts)
colnames(adf_mat) <- c("levels", "fd")
for(i in 1 : ncol(ts)){
adf_mat[i,"levels"] <- adf(ts[,i], "none")$p.value
adf_mat[i,"fd"] <- adf(diff(ts[,i]), "none")$p.value
}
adf_mat
tsf<-cbind(LLG$LLG,PCDM$PCDM, M2$M2, DCPS$DCPS)
tsf<-ts(tsf,names=c("LLG","PCDM", "M2", "PRUEBA"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
head(tsf)
ts.plot((tsf),  col=c(1,2,3,4), lwd=c(2,2,2,2))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
adf_matf <- matrix(0, ncol(tsf), 2)
rownames(adf_matf) <- colnames(tsf)
colnames(adf_matf) <- c("levels", "fd")
for(i in 1 : ncol(tsf)){
adf_matf[i,"levels"] <- adf(tsf[,i], "none")$p.value
adf_matf[i,"fd"] <- adf(diff(tsf[,i]), "none")$p.value
}
adf_matf
pc1<-PCA(tsf, scale.unit=TRUE, ncp=4, graph = FALSE)
head(pc1$eig)
head(pc1$var$contrib)
findex<-(tsf[,1]*(pc1$var$contrib[1,1]/100)) +(tsf[,2]*(pc1$var$contrib[2,1]/100))+(tsf[,3]*(pc1$var$contrib[3,1]/100)+(tsf[,4]*(pc1$var$contrib[4,1]/100)))
head(findex)
ts.plot(findex, col=2, lwd=3)
#tsf[,1] * (pc1$var$contrib[1,1]/100)) +
f<-cbind(GDPMX$GDPMX, findex, GCF$GCF, GDPUS$GDPUS)
head(f)
f<-ts(f, names=c("GDPMX", "findex", "GCF", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,5,2,2))
legend("bottomright", colnames(f), col = c(1:4), lty = 1)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
adf_matm <- matrix(0, ncol(f), 2)
rownames(adf_matm) <- colnames(f)
colnames(adf_matm) <- c("levels", "fd")
for(i in 1 : ncol(f)){
adf_matm[i,"levels"] <- adf(f[,i], "none")$p.value
adf_matm[i,"fd"] <- adf(diff(f[,i]), "none")$p.value
}
adf_matm
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
regref<-lm(f[,"GDPMX"]~f[,"findex"]+f[,"GCF"]+ f[,"GDPUS"])
coeftest(regref)
ts.plot(regref$residuals)
adf(resid(regref))
normality.test(varf)
arch.test(varf)
serial.test(varf)
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
RC <- cbind(f, 1)%*%johaf@V
plot(RC[,1], type="l")
adf(RC[,1])
arch.test(varf)
serial.test(varf)
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
vecols<- cajorls(johaf,r=1)
vecols<- cajorls(johaf,r=1)
summary(vecols$rlm)
coefB(vecols)
#clean
rm(list = ls())
sessionInfo()
# Set the working directory
#setwd()
getwd()
#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR", "rticles", "tsDyn")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
# path
#path <-"C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Findex/Findex/"
# some functions
source("functions.r")
coefB(vecols)
#clean
rm(list = ls())
sessionInfo()
# Set the working directory
#setwd()
getwd()
#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR", "rticles", "tsDyn")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
# path
#path <-"C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Findex/Findex/"
# some functions
source("functions.r")
#import DataFrame
LLG<-WDI(indicator = c("GFDD.DI.05"), country=c('MX'), start=1961, end=2016)
PCDM<-WDI(indicator = c('GFDD.DI.12'), country=c('MX'), start=1961, end=2016)
DCFS<-WDI(indicator = c("FS.AST.DOMS.GD.ZS"), country=c('MX'), start=1961, end=2016)
DCPS<-WDI(indicator = c("FS.AST.PRVT.GD.ZS"), country=c('MX'), start=1961, end=2016)
M2<-WDI(indicator = c("FM.LBL.BMNY.GD.ZS"), country=c('MX'), start=1961, end=2016)
GDPMX<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('MX'), start=1961, end=2016)
GDPUS<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('US'), start=1961, end=2016)
GCF<-WDI(indicator = c("NE.GDI.TOTL.ZS"), country=c('MX'), start=1961, end=2016)
#reArrange
names(LLG)<-c("code", "C","LLG","yr")
LLG<-LLG[order(LLG$yr),]
names(PCDM)<-c("code", "C","PCDM","yr")
PCDM<-PCDM[order(PCDM$yr),]
names(DCFS)<-c("code", "C","DCFS","yr")
DCFS<-DCFS[order(DCFS$yr),]
names(DCPS)<-c("code", "C","DCPS","yr")
DCPS<-DCPS[order(DCPS$yr),]
names(M2)<-c("code", "C","M2","yr")
M2<-M2[order(M2$yr),]
names(GDPMX)<-c("code", "C","GDPMX","yr")
GDPMX<-GDPMX[order(GDPMX$yr),]
names(GDPUS)<-c("code", "C","GDPUS","yr")
GDPUS<-GDPUS[order(GDPUS$yr),]
names(GCF)<-c("code", "C","GCF","yr")
GCF<-GCF[order(GCF$yr),]
LLG$LLG<-log(LLG$LLG)
PCDM$PCDM<-log(PCDM$PCDM)
DCFS$DCFS<-log(DCFS$DCFS)
GDPMX$GDPMX<-log(GDPMX$GDPMX)
GCF$GCF<-log(GCF$GCF)
GDPUS$GDPUS<-log(GDPUS$GDPUS)
DCPS$DCPS<-log(DCPS$DCPS)
M2$M2<-log(M2$M2)
ts<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GCF$GCF, GDPUS$GDPUS)
ts<-ts((ts), names=c("LLG","PCDM", "DCFS", "DCPS","M2", "GDPMX","GCF", "GDPUS"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
head(ts)
ts.plot(scale(ts),col=c(1,2,3,4,5,6,7,8), lwd=c(1,1,1,1,1,1,1))
legend("bottomleft", colnames(ts), col = c(1:8), lty = 1)
cor(ts)
adf_mat <- matrix(0, ncol(ts), 2)
rownames(adf_mat) <- colnames(ts)
colnames(adf_mat) <- c("levels", "fd")
for(i in 1 : ncol(ts)){
adf_mat[i,"levels"] <- adf(ts[,i], "none")$p.value
adf_mat[i,"fd"] <- adf(diff(ts[,i]), "none")$p.value
}
adf_mat
tsf<-cbind(LLG$LLG,PCDM$PCDM, M2$M2, DCPS$DCPS)
tsf<-ts(tsf,names=c("LLG","PCDM", "M2", "PRUEBA"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
head(tsf)
ts.plot((tsf),  col=c(1,2,3,4), lwd=c(2,2,2,2))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
adf_matf <- matrix(0, ncol(tsf), 2)
rownames(adf_matf) <- colnames(tsf)
colnames(adf_matf) <- c("levels", "fd")
for(i in 1 : ncol(tsf)){
adf_matf[i,"levels"] <- adf(tsf[,i], "none")$p.value
adf_matf[i,"fd"] <- adf(diff(tsf[,i]), "none")$p.value
}
adf_matf
pc1<-PCA(tsf, scale.unit=TRUE, ncp=4, graph = FALSE)
head(pc1$eig)
head(pc1$var$contrib)
findex<-(tsf[,1]*(pc1$var$contrib[1,1]/100)) +(tsf[,2]*(pc1$var$contrib[2,1]/100))+(tsf[,3]*(pc1$var$contrib[3,1]/100)+(tsf[,4]*(pc1$var$contrib[4,1]/100)))
head(findex)
ts.plot(findex, col=2, lwd=3)
#tsf[,1] * (pc1$var$contrib[1,1]/100)) +
f<-cbind(GDPMX$GDPMX, findex, GCF$GCF, GDPUS$GDPUS)
head(f)
f<-ts(f, names=c("GDPMX", "findex", "GCF", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,5,2,2))
legend("bottomright", colnames(f), col = c(1:4), lty = 1)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
adf_matm <- matrix(0, ncol(f), 2)
rownames(adf_matm) <- colnames(f)
colnames(adf_matm) <- c("levels", "fd")
for(i in 1 : ncol(f)){
adf_matm[i,"levels"] <- adf(f[,i], "none")$p.value
adf_matm[i,"fd"] <- adf(diff(f[,i]), "none")$p.value
}
adf_matm
p <- VARselect(f,lag.max=7, type = "const")$selection["AIC(n)"]
p
#pero escogeremos 6 por periodo sexenal
p <- 6
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
roots(varf)
regref<-lm(f[,"GDPMX"]~f[,"findex"]+f[,"GCF"]+ f[,"GDPUS"])
coeftest(regref)
ts.plot(regref$residuals)
adf(resid(regref))
arch.test(varf)
serial.test(varf)
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
RC <- cbind(f, 1)%*%johaf@V
plot(RC[,1], type="l")
adf(RC[,1])
vecols<- cajorls(johaf,r=1)
summary(vecols$rlm)
coefB(vecols)
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
varf2<- vec2var(johaf,r=1)
varf2<- vec2var(johaf,r=1)
plot(irf(varf2, impulse = colnames(f)[i+1],
response = "GDPMX", n.ahead=20),main = colnames(f)[i+1])
varf2<- vec2var(johaf,r=1)
plot(irf(varf2, impulse = c("findex","GCF","GDPUS"),
response = "GDPMX", n.ahead=20),main = colnames(f))
varf2<- vec2var(johaf,r=1)
plot(irf(varf2, impulse = c("findex","GCF","GDPUS"),
response = "GDPMX", n.ahead=20))
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 3){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX", n.ahead=20),
main = colnames(f)[i+1])
}
par(opp)
arch.test(varf2)
serial.test(varf2)
